<!DOCTYPE html>
<html style="height:100%;">
<head>
    <meta charset="UTF-8">
    <title>CanvasPage</title>
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css">
    <!-- Optional theme -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css">
    <!-- Latest compiled and minified JavaScript -->
    <script src="/javascripts/canvas2image.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="/stylesheets/farbtastic.css" type = "text/css"/>
    <link rel="stylesheet" href="/stylesheets/jquery-ui.css"/>
    <script src="http://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="/javascripts/jquery-ui.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="/javascripts/farbtastic.js"></script>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link rel="stylesheet" type="text/css" href="/easyrtc/easyrtc.css" />
    <meta name="viewport" content="width=device-width, minimum-scale=1, maximum-scale=1">
    <script type="text/javascript" src="/easyrtc/easyrtc.js"></script>
    <link rel="stylesheet" type="text/css" href="/stylesheets/demo_room.css" />
    <script type="text/javascript" src="/javascripts/demo_multiparty.js"></script>
    <script>
        function Point(event, target) {
            this.x = event.pageX - $(target).position().left;
            this.y = event.pageY - $(target).position().top;
        }
    </script>
    <script>
        $(document).ready(function(){
            var canvas = document.getElementById('canvas');
            var context = canvas.getContext('2d');

            var width = 5;
            var alpha = 0.1;
            var color = '#000000';
            var isDown = false;
            var newPoint, oldPoint;

            context.fillStyle="#FFFFFF";
            context.fillRect(0,0,canvas.width, canvas.height);
            canvas.onmousedown = function(event){
                isDown = true;
                oldPoint = new Point(event, this);
            };
            canvas.onmouseup = function(){
                isDown = false;
            };
            canvas.onmousemove = function(event){
                if(isDown){
                    newPoint = new Point(event, this);

                    socket.emit('draw', {
                        width: width,
                        color: color,
                        x1: oldPoint.x,
                        y1: oldPoint.y,
                        x2: newPoint.x,
                        y2: newPoint.y,
                        gAlpha: alpha
                    });
                    oldPoint = newPoint;
                }
            };

            var socket = io.connect();
            socket.emit('join', '<%=room%>');
            socket.on('line', function(data){
                context.lineWidth = data.width;
                context.strokeStyle = data.color;
                context.beginPath();
                context.moveTo(data.x1, data.y1);
                context.lineTo(data.x2, data.y2);
                context.stroke();
                context.globalAlpha = data.gAlpha;
            });

            $('#colorpicker').farbtastic(function(data){
                color = data;
            });

            $('button[id="eraser"]').click(function(event){
                color = $('#eraser').val();
                alpha = 1;
            });
            $('button[id="straight"]').click(function(event){
                canvas.onclick = function(event){
                    oldPoint = new Point(event, this);
                };
                canvas.onclick = function(event){
                    newPoint = new Point(event, this);
                };
                    context.beginPath();
                    context.moveTo(oldPoint.x1, oldPoint.y1);
                    context.lineTo(newPoint.x2, newPoint.y2);
                    context.stroke();
            });

            $('#slider').slider({
                max:25, min:1,
                //value: 30,
                change: function(event, ui){
                    width = ui.value;
                }
            });

            /*$('#slider1').slider({
                max:10, min:1,
                value: 0.5,
                change: function(event, ui){
                    alpha = ui.value;
               }
            });*/

            $('select[id="optselector"]').click(function(event){
               alpha=$('#optselector').val();
            });

            $('button[id="btnDel"]').click(function(event){
                context.clearRect(0,0, canvas.width, canvas.height);
                context.beginPath();
                localStorage.removeItem('imgData');
            });
            $('button[id="saveImage"]').click(function(event){
                var strDataURI = canvas.toDataURL();
                Canvas2Image.saveAsJPEG(canvas);
            });
            socket.on('create_room', function(data){
               // alert(data);
                $('#show_con').append('<dd style="margin:0px; text-align: center">' + data + '님이 '+data+'번 방에 접속 하셨습니다.</dd>');
                scroll_down();
            });
            //socket.on('confirm_room', function(data){
            //    $('#show_con').append('<dd style="margin:0px; text-align: center">' + data + '님이 '+data.room+'번 방에 접속 하셨습니다.</dd>');
            //});

            function scroll_down() {
                var aa = document.getElementById('c_room');
                if(aa.scrollHeight > aa.offsetHeight) {
                    aa.scrollTop = aa.scrollHeight - aa.offsetHeight;
                }
            }

            $('#btn').click(function(){
                if($("#txt").val() != ''){
                    var message = {
                        msg: strip_tag ($('#txt').val()),
                        user: $('#room').val()
                    };
                    socket.emit('message', message);
                    socket.emit('message_me', message);
                    $("#txt").val('');
                }
            });
            $("#txt").keyup(function(event){
                if($("#txt").val() != ''){
                    if(event.which==13){
                        var message = {
                            msg: strip_tag ($('#txt').val()),
                            user: $('#room').val()
                        };
                        socket.emit('message', message);
                        socket.emit('message_me', message);
                        $("#txt").val('');
                    }
                }
            });
            socket.on('message', function(data){
                $('#show_con').append('<dd style="float:left; margin:2px; width:200px; text-align: left; font-size:14px;"><%=s_name%> : <br/>' + data.msg + '</dd>');
                scroll_down();
                scroll_down();
            });

            socket.on('message_me', function(data){
                $('#show_con').append('<dd style="float:right; width:200px; margin:5px; line-height:25px; text-align: right; font-size:14px;">' + data.msg + '</dd>');
                scroll_down();
                scroll_down();
            });
            var w= screen.availWidth;
            var h= screen.availHeight;
            $('#box0').css('width', w/5-20);
            $('#box1').css('width', w/5-20);
            $('#box2').css('width', w/5-20);
            $('#box3').css('width', w/5-20);
            $('#box4').css('width', w/5-20);
            $('#c_room').css('width', w/5);
            $('#c_room').css('height', 500);
            $('#txt').css('width', w/5-50);
        });
        //채팅창에서 스크립트 안되도록함.
        function strip_tag (str)
        {
            return str.replace(/(<([^>]+)>)/ig,"");
        }
    </script>
    <style type="text/css">
        html{
            height: 100%;
        }
        body{
            position:absolute; top:0; bottom:0; right:0; left:0;
            background-image: url("/images/Main.png"); background-size:100% 100%;
        }
        dd{
            background-color:wheat;
        }
        #btnDel{
            background-image: url("/images/button_refresh.png");
            width:32px;
            height: 32px;
        }
    </style>
</head>
<body onload="appInit()" style="position:absolute; top:0; bottom:0; left:0; right:0;">
<p id="roomn" style="display:none"><%=room%></p>
<div>
    <div class="plat" style="display:table-row">
        <div class="plat_child" style="display:table-cell; float:left;">
        <table border="3" style="background-color: white; border:solid 3px;">
            <tr>
                <td rowspan="4">
                    <!--캔버스-->
                    <canvas id="canvas" style="background-color: white;" width="850" height="500"></canvas>
                </td>
                <td height="200">
                    <!--색상 선택기-->
                    <div id="colorpicker"></div>
                </td>
            </tr>
            <tr>
                <td height="25">
                    <!--슬라이더: 펜 두께-->
                    <div id="slider"></div>
                </td>
            </tr>
            <tr>
                <td height="25">
                    <!--슬라이더: 농도 조절-->
                    <div id="slider1"></div>

                <select id="optselector">
                    <option value="0.1">0.1</option>
                    <option value="0.2">0.2</option>
                    <option value="0.3">0.3</option>
                    <option value="0.4">0.4</option>
                    <option value="0.5">0.5</option>
                    <option value="0.6">0.6</option>
                    <option value="0.7">0.7</option>
                    <option value="0.8">0.8</option>
                    <option value="0.9">0.9</option>
                    <option value="1.0">1.0</option>
                </select></td>
            </tr>
            <tr>
                <td style="background: orange;"><div><button class="btn btn-default btn-xs" id="btnDel"></button></div>
                <div><button class="btn btn-default btn-xs" id="eraser" value="rgb(255,255,255)">지우개</button></div>
                <div><button class="btn btn-default btn-xs" id="straight">직선</button></div>
                <div><button class="btn btn-default btn-xs" id="saveImage">화면저장</button></div>
                <div><button class="btn btn-default btn-xs" id="rectangle">사각형</button></div></td>
            </tr>
        </table></div>
        <div class="plat_child" style="display:table-cell; float:left; padding-left:10px;">
        <div id="chat">
            <div style = "background-color: white; overflow:auto; border:solid 5px;" id="c_room">
                <dl id = "show_con">
                </dl>
            </div>
            <input type="text" style="width:255px;" id="txt"/>&nbsp;<input type="button" class="btn btn-default btn-xs" value="Enter" id="btn"/>
        </div></div>
    </div><br/>
    <div class="plat"  style="display:table-row, block;">
        <div>
        <div class="plat_child_rtc" style="display:table-cell; padding-left:17px"><video id="box0" muted="muted" volume="0"></video></div>
        <div class="plat_child_rtc" style="display:table-cell; padding-left:17px"><video id="box1"></video></div>
        <div class="plat_child_rtc" style="display:table-cell; padding-left:17px"><video id="box2"></video></div>
        <div class="plat_child_rtc" style="display:table-cell; padding-left:17px"><video id="box3"></video></div>
        <div class="plat_child_rtc" style="display:table-cell; padding-left:17px"><video id="box4"></video></div>
        </div>
    </div>
</div>
</body>
</html>