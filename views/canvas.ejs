<!DOCTYPE html>
<html style="height:100%;">
<head>
    <meta charset="UTF-8">
    <title>CanvasPage</title>
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css">
    <!-- Optional theme -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css">
    <!-- Latest compiled and minified JavaScript -->
    <script src="/javascripts/canvas2image.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="/stylesheets/farbtastic.css" type = "text/css"/>
    <link rel="stylesheet" href="/stylesheets/jquery-ui.css"/>
    <script src="http://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="/javascripts/jquery-ui.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="/javascripts/farbtastic.js"></script>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link rel="stylesheet" type="text/css" href="/easyrtc/easyrtc.css" />
    <meta name="viewport" content="width=device-width, minimum-scale=1, maximum-scale=1">
    <script type="text/javascript" src="/easyrtc/easyrtc.js"></script>
    <link rel="stylesheet" type="text/css" href="/stylesheets/demo_room.css" />
    <script type="text/javascript" src="/javascripts/demo_multiparty.js"></script>
    <script>
        function Point(event, target) {
            this.x = event.pageX - $(target).position().left;
            this.y = event.pageY - $(target).position().top;
        }
    </script>
    <script>
        $(document).ready(function(){
            var canvas = document.getElementById('canvas');
            var canvas_buffer = document.createElement('canvas');
            var context = canvas.getContext('2d');
            var ctxBuffer = canvas_buffer.getContext('2d');
            ctxBuffer.canvas.width = canvas.width;
            ctxBuffer.canvas.height = canvas.height;

            var alpha = 1;
            var color = '#000000',tcolor;
            var isDown = false,c_eraser=false;
            var radius=5, oldPoint,newPoint,selectedObject='pen';

            ctxBuffer.fillStyle="#FFFFFF";
            ctxBuffer.fillRect(0,0,canvas.width, canvas.height);
            context.drawImage(canvas_buffer, 0, 0);
            canvas.onmousedown = function(event){
                isDown = true;
                oldPoint = new Point(event, this);
            };
            canvas.onmouseup = function(){
                isDown = false;
                switch(selectedObject){
                    case 'rect':
                        newPoint = new Point(event, this);

                        socket.emit('drawRect', {
                            color: color,
                            x1: newPoint.x,
                            y1: newPoint.y,
                            x2: oldPoint.x,
                            y2: oldPoint.y,
                            width: radius,
                            gAlpha: alpha
                        });

                        oldPoint = newPoint;
                        break;
                }
            };
            canvas.onmousemove = function(event){
                if(isDown){
                    switch(selectedObject){
                        case 'pen':
                            newPoint = new Point(event, this);

                            socket.emit('draw', {
                                color: color,
                                x1: newPoint.x,
                                y1: newPoint.y,
                                x2: oldPoint.x,
                                y2: oldPoint.y,
                                r: radius,
                                gAlpha: alpha
                            });

                            oldPoint = newPoint;
                            break;
                        case 'rect':

                            break;
                    }
                }
            };

            var socket = io.connect();
            socket.emit('join', '<%=room%>');
            socket.on('line', function(data){
                ctxBuffer.strokeStyle = data.color;
                ctxBuffer.beginPath();
                var tx = (data.x2-data.x1)/20;
                var ty = (data.y2-data.y1)/20;
                for (var i = 0;i<20;i++) {
                    ctxBuffer.fillStyle = data.color;
                    ctxBuffer.fill();
                    ctxBuffer.arc(data.x1+tx*i, data.y1+ty*i, data.r, 0, Math.PI * 2, true);
                }
                ctxBuffer.stroke();
                ctxBuffer.globalAlpha = data.gAlpha;
                ctxBuffer.closePath();
                context.drawImage(canvas_buffer, 0, 0);
            });
            socket.on('rect', function(data){
                ctxBuffer.strokeStyle = data.color;
                ctxBuffer.lineWidth = data.width;
                ctxBuffer.beginPath();
                ctxBuffer.rect(data.x2,data.y2,data.x1-data.x2,data.y1-data.y2);
                ctxBuffer.stroke();
                ctxBuffer.globalAlpha = data.gAlpha;
                ctxBuffer.closePath();
                context.drawImage(canvas_buffer, 0, 0);
            });

            $('#colorpicker').farbtastic(function(data){
                color = data;
                tcolor = color;
            });

            $('button[id="eraser"]').click(function(event){
                if (c_eraser==false) {
                    tcolor = color;
                    color = $('#eraser').val();
                    selectedObject = 'pen';
                    alpha = 1;
                    c_eraser=true;
                }
            });
            $('button[id="straight"]').click(function(event){
                canvas.onclick = function(event){
                    oldPoint = new Point(event, this);
                };
                ctxBuffer.beginPath();
                ctxBuffer.arc(oldPoint.x, oldPoint.y, radius, 0, Math.PI*2, false);
                ctxBuffer.stroke();
                ctxBuffer.globalAlpha = alpha;
                ctxBuffer.closePath();
                context.drawImage(canvas_buffer, 0, 0);
            });

            $('#slider').slider({
                max:25, min:1,
                //value: 30,
                change: function(event, ui){
                    radius = ui.value;
                }
            });

            /*$('#slider1').slider({
                max:10, min:1,
                value: 0.5,
                change: function(event, ui){
                    alpha = ui.value;
               }
            });*/

            $('select[id="optselector"]').click(function(event){
               alpha=$('#optselector').val();
            });

            $('button[id="btnDel"]').click(function(event){
                ctxBuffer.clearRect(0,0, canvas_buffer.width, canvas_buffer.height);
                ctxBuffer.beginPath();
                ctxBuffer.fillStyle="#FFFFFF";
                ctxBuffer.fillRect(0,0,canvas.width, canvas.height);
                ctxBuffer.closePath();
                context.drawImage(canvas_buffer, 0, 0);
            });
            $('button[id="saveImage"]').click(function(event){
                var strDataURI = canvas.toDataURL();
                Canvas2Image.saveAsJPEG(canvas);
            });
            $('button[id="drawRect"]').click(function(event){
                selectedObject = 'rect';
                color = tcolor;
                c_eraser = false;
            });
            $('button[id="drawPen"]').click(function(event){
                selectedObject = 'pen';
                color = tcolor;
                c_eraser = false;
            });
            socket.on('create_room', function(data){
               // alert(data);
                $('#show_con').append('<dd style="margin:0px; text-align: center">' + data + '님이 '+data+'번 방에 접속 하셨습니다.</dd>');
                scroll_down();
            });
            //socket.on('confirm_room', function(data){
            //    $('#show_con').append('<dd style="margin:0px; text-align: center">' + data + '님이 '+data.room+'번 방에 접속 하셨습니다.</dd>');
            //});

            function scroll_down() {
                var aa = document.getElementById('c_room');
                if(aa.scrollHeight > aa.offsetHeight) {
                    aa.scrollTop = aa.scrollHeight - aa.offsetHeight;
                }
            }

            $('#btn').click(function(){
                if($("#txt").val() != ''){
                    var message = {
                        msg: strip_tag ($('#txt').val()),
                        name: '<%=s_name%>'
                    };
                    socket.emit('message', message);
                    socket.emit('message_me', message);
                    $("#txt").val('');
                }
            });
            $("#txt").keyup(function(event){
                if($("#txt").val() != ''){
                    if(event.which==13){
                        var message = {
                            msg: strip_tag ($('#txt').val()),
                            name: '<%=s_name%>'
                        };
                        socket.emit('message', message);
                        socket.emit('message_me', message);
                        $("#txt").val('');
                    }
                }
            });
            socket.on('message', function(data){
                $('#show_con').append('<dd style="padding-left:10px; color:white; float:left; margin:5px; width:200px; text-align: left; font-size:14px;">' + data.name+ ' : <br/>' + data.msg + '</dd>');
                scroll_down();
                scroll_down();
            });

            socket.on('message_me', function(data){
                $('#show_con').append('<dd style="color:white; float:right; width:200px; margin:5px; line-height:25px; text-align: right; font-size:14px;">' + data.msg + '</dd>');
                scroll_down();
                scroll_down();
            });
            var w= screen.availWidth;
            var h= screen.availHeight;
            var h2 = $('.video').height();
            $('.video').css('width', w/5-20);
            $('#c_room').css('width', w/5);
            $('#c_room').css('height', 475);
            $('#txt').css('width', w/5-50);
            $('.plat_child_rtc').css('width', w/5-20);
            $('.plat_child_rtc').css('height', h2);

        });
        //채팅창에서 스크립트 안되도록함.
        function strip_tag (str)
        {
            return str.replace(/(<([^>]+)>)/ig,"");
        }
        function out_video()
        {
            location.replace('/schedule/back');
        }
    </script>
    <style type="text/css">
        html{
            height: 100%;
        }
        body{
            position:absolute; top:0; bottom:0; right:0; left:0;
            background-image: url("/images/roompage.png"); background-size:100% 100%;
        }
        dd{
            background-color:black;
            border-radius: 10px;
            padding-right:10px;
        }
        #btnDel{
            background-image: url("/images/button_refresh.png");
            width:32px;
            height: 32px;
        }
        #c_room{
            -moz-border-radius: 12px;
            -webkit-border-radius: 12px;
            border-radius: 12px;

            -moz-box-shadow: 4px 4px 14px #000;
            -webkit-box-shadow: 4px 4px 14px #000;
            box-shadow: 4px 4px 14px #000;

            filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=.2);
        }
        #txt{
            -moz-border-radius: 12px;
            -webkit-border-radius: 12px;
            border-radius: 5px;

            -moz-box-shadow: 4px 4px 14px #000;
            -webkit-box-shadow: 4px 4px 14px #000;
            box-shadow: 4px 4px 14px #000;

            filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=.2);
            background-color: transparent;
        }
        #canvas{
            -moz-border-radius: 12px;
            -webkit-border-radius: 12px;
            border-radius: 5px;

            -moz-box-shadow: 4px 4px 14px #000;
            -webkit-box-shadow: 4px 4px 14px #000;
            box-shadow: 4px 4px 14px #000;

            filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=.2);
        }
        table{
            -moz-border-radius: 12px;
            -webkit-border-radius: 12px;
            border-radius: 20px;

            -moz-box-shadow: 4px 4px 14px #000;
            -webkit-box-shadow: 4px 4px 14px #000;
            box-shadow: 4px 4px 14px #000;

            filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=.2);
        }
        .video{
            moz-border-radius: 12px;
            -webkit-border-radius: 12px;
            border-radius: 20px;
            transition-duration: 0.5s;
            -webkit-animation: showSlowlyElement 700ms;
            -moz-box-shadow: 4px 4px 14px #000;
            -webkit-box-shadow: 4px 4px 14px #000;
            box-shadow: 4px 4px 14px #000;

            filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=.2);
        }
        .video:hover{
            transform: scale(1.2,1.2) translateZ(60px);
        }
        .drawBtn{
            transition-duration: 0.5s;
            -webkit-animation: showSlowlyElement 700ms;
        }
        .drawBtn:hover{
            transform: scale(1.2,1.2) translateZ(60px);
        }
    </style>
</head>
<body onload="appInit()" style="position:absolute; top:0; bottom:0; left:0; right:0;">
<p id="roomn" style="display:none"><%=room%></p>
<div>
    <div class="plat" style="display:table-row">
        <div class="plat_child" style="margin-left:20px; margin-top:20px; display:table-cell; float:left;">
        <table style="background-color:#b0b0b0 ; border-radius: 20px;">
            <tr>
                <td rowspan="3">
                    <!--캔버스-->
                    <canvas id="canvas" style="border-radius: 20px; background-color: white; position:relative;" width="850" height="500"></canvas>
                </td>
                <td height="200">
                    <!--색상 선택기-->
                    <div id="colorpicker"></div>
                </td>
            </tr>
            <tr>
                <td height="25">
                    <!--슬라이더: 펜 두께-->
                    <div id="slider"></div>
                </td>
            </tr>
            <tr>
                <td style="background: transparent;">
                    <div ><select style="display:block; margin-right:auto; margin-left:auto;" id="optselector" >
                        <option value="0.1">0.1</option>
                        <option value="0.2">0.2</option>
                        <option value="0.3">0.3</option>
                        <option value="0.4">0.4</option>
                        <option value="0.5">0.5</option>
                        <option value="0.6">0.6</option>
                        <option value="0.7">0.7</option>
                        <option value="0.8">0.8</option>
                        <option value="0.9">0.9</option>
                        <option selected="selected" value="1.0">1.0</option>
                    </select></div>
                    <div style="margin-right:auto; margin-left:auto; display:block;">
                    <div style="margin-bottom:5px;">
                        <span style="padding-left: 20%;"><button class="drawBtn" style="border:none; background-color: transparent; background-image: url('/images/pen.png'); background-size: 100% 100%; width:50px; height:50px;" id="drawPen"></button></span>
                        <span style="padding-left: 10%;"><button class="drawBtn" style="border:none; background-color: transparent; background-image: url('/images/rect.png'); background-size: 100% 100%; width:50px; height:50px;" id="drawRect"></button></span>
                    </div>
                    <div style="margin-bottom:10px;">
                        <span style="padding-left: 20%;"><button class="drawBtn" style="border:none; background-color: transparent; background-image: url('/images/eraser.png'); background-size: 100% 100%; width:50px; height:50px;" id="eraser" value="white"></button></span>
                        <span style="padding-left: 10%;"><button class="drawBtn" style="border:none; background-color: transparent; background-image: url('/images/save.png'); background-size: 100% 100%; width:50px; height:50px;" id="saveImage"></button></span>
                    </div>
                    <div>
                        <span style="padding-left: 18%;"><button class="drawBtn" style="border:none; background-color: transparent; background-image: url('/images/trash.png'); background-size: 100% 100%; width:50px; height:50px;" id="btnDel"></button></span>
                        <span style="padding-left: 10%;"><a href="#" onClick="out_video();"><button class="drawBtn" style="border:none; background-color: transparent; background-image: url('/images/toHome.png'); background-size: 100% 100%; width:50px; height:50px; cursor:pointer;" id="toRoom"></button></a></span>
                    </div></div>
                </td>
            </tr>
        </table></div>
        <div class="plat_child" style="display:table-cell; float:left; padding-left:17px; margin-top:20px">
        <div id="chat">
            <div style = "background-color: transparent; overflow:auto;" id="c_room">
                <dl id = "show_con">
                </dl>
            </div>
            <input style="margin-top:10px;" type="text" style="width:255px;" id="txt"/>&nbsp;&nbsp;<input type="button" class="btn btn-default btn-xs" value="Enter" id="btn"/>
        </div></div>
    </div><br/>
    <div class="plat"  style="display:table-row, block;">
        <div>
        <div class="plat_child_rtc" style="display:table-cell; padding-left:17px"><video class="video" id="box0" muted="muted" volume="0"></video></div>
        <div class="plat_child_rtc" style="display:table-cell; padding-left:17px"><video class="video" id="box1"></video></div>
        <div class="plat_child_rtc" style="display:table-cell; padding-left:17px"><video class="video" id="box2"></video></div>
        <div class="plat_child_rtc" style="display:table-cell; padding-left:17px"><video class="video" id="box3"></video></div>
        <div class="plat_child_rtc" style="display:table-cell; padding-left:17px"><video class="video" id="box4"></video></div>
        </div>
    </div>
</div>
</body>
</html>